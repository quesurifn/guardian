"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","0c25b929be7e96c148af71c1aa154531"],["/static/css/main.3c374636.css","1505a933e27022fcc368f76ce0764997"],["/static/js/main.257fffa8.js","b5c10e97a5a5b44555e1cef793cc1fff"],["/static/media/cad.2d318fcc.png","2d318fcc2fbdfe1a58a80c0f238465d5"],["/static/media/duckie.dd9c9a5b.jpg","dd9c9a5b76f1adf6a042b7da509038f7"],["/static/media/faceb.7a4410bb.png","7a4410bbba566dec6a3d55f58701ddc2"],["/static/media/guardian.07815923.png","0781592379ec3e0054c07eba72c0a5a9"],["/static/media/guardian1.cd6166d2.png","cd6166d2dcce0e96bb054b020960413f"],["/static/media/guardianTwo.f68a7ee7.png","f68a7ee794a47f46be95c7d3c0f9b4d4"],["/static/media/guradianhero.5610de86.png","5610de8623b9850181fa855f462c1941"],["/static/media/hero.0f9e6b3a.png","0f9e6b3a3569d33cfc14385d6141b1cc"],["/static/media/leak-detector-background.4e9eaec6.jpg","4e9eaec62d095fc41894161f04f3bddf"],["/static/media/leak.5d44f13a.png","5d44f13a361b052845da16ddb3f19b02"],["/static/media/leaking-pipe.529df8c3.jpg","529df8c385478b8196fba15279db8919"],["/static/media/purchaseOne.95452f98.png","95452f9862b13025042066f1c371f0a0"],["/static/media/purchaseTwo.5bfd094e.png","5bfd094ee97ff02a760fea86990b2765"],["/static/media/reserveOne.7ee96efa.png","7ee96efa57201edd01a18403d468568c"],["/static/media/splash.69297e19.png","69297e19ab702eb0fbded2bbc52a3747"],["/static/media/valve.666bd957.png","666bd9570961346d6608b7852a45bd7d"],["/static/media/video-slate.02f3b5ab.jpg","02f3b5ab261c6348c7b50ea1eff39f74"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});